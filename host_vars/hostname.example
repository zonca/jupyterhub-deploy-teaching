---

# Rename this files with the name of your host
# and edit to customize its settings.

# ---------------------------------------------------
# Required
# ---------------------------------------------------

# The base directory of user accounts
home_dir: /home

# The users that should be jupyterhub admins
jupyterhub_admin_users:
  - instructor

# The regular users able to use jupyterhub
jupyterhub_users:
  - instructor
  - grader
  - student1
  - student2

# The secret token to use for accessing the proxy
# Create using something like `openssl rand -hex 32`
proxy_auth_token: ''

# nbgrader formgrade setup
nbgrader_course_id: mycourse
nbgrader_owner: instructor
nbgrader_base_dir: "{{home_dir}}/{{nbgrader_owner}}/nbgrader/{{nbgrader_course_id}}"
nbgrader_graders: 
    - instructor
    - grader
nbgrader_port: 5005

# The API token formgrader will use to make requests of the Hub
# Create using something like `openssl rand -hex 32`
formgrader_hubapi_token: ''


# ---------------------------------------------------
# Optional
# ---------------------------------------------------

# To mount local file systems populate this list.
# This adds the entries to /etc/fstab, creates the mount point and mounts them.
# Disks must be partitioned and formatted.
local_mounts: []
#   - name: /mountpoint1
#     src: /dev/sdb1
#     fstype: ext3
#   - name: /mountpoint2
#     src: /dev/sdc1
#     fstype: ext3

# If you want to use letsencrypt to generate SSL key/cert. Otherwise you MUST
# put your key and cert into the security directory as security/ssl.crt and 
# security/ssl.key
use_letsencrypt: false
letsencrypt_email: ''

# If you want users to have /public_html/username directories set this to true
nginx_public_html: false

# Optionally set this to a list of the GitHub usernames whose public
# GitHub SSH keys will be installed to allow then to ssh to the server
# as root.
github_usernames: ['instructor', 'grader']

# Optionally cull idle single user servers
use_cull_idle_servers: false
# The username and API token for culling idle servers
# Create using something like `openssl rand -hex 32`
cull_idle_servers_owner: instructor
cull_idle_servers_hubapi_token: ''
# The interval (in seconds) for checking for idle servers to cull
cull_every: 600
# The idle timeout (in seconds)
cull_timeout: 3600

# Optionally set this as your Google Analytics Tracking ID
ga_tracking_id: ''

# Optionally set this as your NewRelic license key
newrelic_license_key: ''

# Optionally change use_oauth to `true` and set the other values appropriately
# to enable Github OAuth.
use_oauth: false
oauth_callback_url: https://mydomain.org/hub/oauth_callback
oauth_client_id: ''
oauth_client_secret: ''

# Set this to the codename of your ubuntu version.
# This is used to setup the R apt repositories which are based on this
ubuntu_codename: wily
