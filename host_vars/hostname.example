---

# An example `hostname` file
#
# Edit this file to customize settings for a particular host.
# Save as FQDN of the hostname without the `.example` suffix,
# such as `jupyterhub.myuniversity.edu`.

# ------------------------------------------------------------------------------
# Required settings
# ------------------------------------------------------------------------------

# The base directory of user accounts.
home_dir: /home

# Users with administrative privileges.
jupyterhub_admin_users:
  - zonca

# Whitelist of jupyterhub users.
jupyterhub_users:
  - zonca
  - instructor1
  - instructor2
  - grader1
  - grader2
  - student1-course1
  - student2-course1
  - student1-course2
  - student2-course2

# R kernel installation, set to true to enable.
install_r_kernel: true

# bash kernel installation, set to true to enable
install_bash_kernel: true

# Secret token for proxy access. Create token using something like
# `openssl rand -hex 32` and enter between quotation marks below.
proxy_auth_token: "{{ lookup('file', 'sensitive_data/proxy_auth_token.txt') }}"

# Cleanup single user servers and the proxy on jupyterhub shutdown. Setting
# this to false, will allow jupyterhub to be restarted while leaving the proxy
# and single user servers running.
cleanup_on_shutdown: true

# ------------------------------------------------------------------------------
# Packages
# ------------------------------------------------------------------------------

# Add or remove packages here for different package managers here (conda, pip,
# cran). The package listed here are on-top of the base installation of jupyter,
# ipython and the IPython and IR kernel.

conda_packages:
  - numpy
  - scipy
  - matplotlib
  - cython
  - h5py
  - scikit-learn
  - scikit-image
  - pandas
  - sympy
  - pillow
  - seaborn
  - patsy
  - statsmodels
  - networkx
  - dask
  - blaze
  - odo
  - altair

pip_packages:
  - brewer2mpl
  - ggplot
  - ipythonblocks
  - plotly

cran_packages:
  - car
  - ggplot2
  - XML
  - plyr
  - randomForest
  - Hmisc
  - stringr
  - RColorBrewer
  - reshape
  - reshape2
  - RCurl
  - devtools
  - dplyr
  - httr
  - knitr
  - packrat
  - rmarkdown
  - rvtest
  - testit
  - testthat
  - tidyr
  - shiny
  - base64enc
  - Cairo
  - codetools
  - table
  - gridExtra
  - gtable
  - hexbin
  - jpeg
  - Lahman
  - MASS
  - PKI
  - png
  - microbenchmark
  - mgcv
  - mapproj
  - maps
  - maptools
  - mgcv
  - multcomp
  - nycflights13
  - quantreg
  - javareconf
  - rJava
  - roxygen2
  - RSQLite
  - lattice
  - nlme
  - RCurl 
  - RHTMLForms
  - RJSONIO
  - RSelenium
  - rgl
  - caret
  - data.table
  - parallel
  - testthat
  - rpart
  - caret
  - RTextTools
  - XLSX

# ------------------------------------------------------------------------------
# Optional settings
# ------------------------------------------------------------------------------

# The following sections are for optional features that can be enabled.

# ------------------------------------------------------------------------------
# OAuth
# ------------------------------------------------------------------------------

# The default authentication will use PAM, which is the standard UNIX password
# standard. In the default configuration UNIX usernames and passwords will be
# used for JupyterHub. Enabling OAuth through an OAuth provider (such as GitHub)
# will enable users to log in using their username and passwords from the OAuth
# provider. In this case, new users can be added using the JupyterHub Admin
# page, and the users' home directories will be automatically created.

# Set to `true` to enable.
use_oauth: false

# ------------------------------------------------------------------------------
# nbgrader
# ------------------------------------------------------------------------------

# nbgrader is a system for assigning, collecting and grading notebook based
# homework assignments. For more details see:
# http://nbgrader.readthedocs.io/en/stable/

# Set to `true` to enable.
use_nbgrader: true

# The list of nbgrader courses. Each must have a unique `course_id` and `port`.
# IMPORTANT: These user accounts must be created before the ansible scripts
# are run. If OAuth is used, passwords must be disabled for those users.
nbgrader_courses:
  - {
      course_id: "course1",
      owner: "instructor1",
      graders: ["instructor1", "grader1"],
      students: ["student1-course1", "student2-course1"],
      port: 5005
    }
  - {
      course_id: "course2",
      owner: "instructor2",
      graders: ["instructor2", "grader2"],
      students: ["student1-course2", "student2-course2", "student2-course1"],
      port: 5006
    }

# ------------------------------------------------------------------------------
# cull_idle_servers
# ------------------------------------------------------------------------------

# Set to `true` to enable.
use_cull_idle_servers: true

# The interval (in seconds) for checking for idle servers to cull.
cull_every: 6000

# The idle timeout (in seconds).
cull_timeout: 36000

# ------------------------------------------------------------------------------
# Misc optional settings
# ------------------------------------------------------------------------------

# List of the GitHub usernames who will receive root access via ssh. Public
# GitHub SSH keys will be installed to allow the user to ssh into the server as
# root.
github_usernames: ['zonca']

# To mount local file systems populate this list. (Optional) This adds the
# entries to /etc/fstab, creates the mount points, and mounts them. Note: Disks
# must be partitioned and formatted.
local_mounts: []
#   - name: /mountpoint1
#     src: /dev/sdb1
#     fstype: ext3
#   - name: /mountpoint2
#     src: /dev/sdc1
#     fstype: ext3

# SSL using letsencrypt (optional - use letsencrypt default: false) If using
# letsencrypt to generate SSL key/cert, set `use_letsencrypt` to `true`
# Otherwise if not using letsencrypt for SSL, you MUST put your key and cert
# into the security directory as `security/ssl.crt` and `security/ssl.key`.
use_letsencrypt: true
letsencrypt_email: 'zonca@sdsc.edu'

# Should users have `/public_html/username` directories. Set this to `true` to
# enable.
nginx_public_html: false

# Set Google Analytics Tracking ID (Optional).
ga_tracking_id: ''

# Set NewRelic license key (Optional).
newrelic_license_key: ''

